AWSTemplateFormatVersion: "2010-09-09"
Description: Dev EC2 instance to test Nginx

Parameters:
  MyVpcId:
    Type: String
    Default: vpc-5f285e36
    Description: Your VPC ID where you want to deploy the application

  publicSubnetId:
    Type: String
    Default: subnet-56f04c1b
  
  keyPairName:
    Type: String
    Default: new-app-key


Mappings:
  AWSRegionToAMI:
  # Ensure you supply a valid AWS Linux 2 ami in eu-west-2 
  # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html
    eu-west-2:
      AMIID: ami-0f8f99aa5fa000138

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 Security Group
      VpcId: !Ref MyVpcId

  SecurityGroupHTTPinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: '80'
      ToPort: '80'
      CidrIp: 0.0.0.0/0

  SecurityGroupSSHinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp: 0.0.0.0/0

  AppSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: '31000'
      ToPort: '61000'
      SourceSecurityGroupId: !Ref SecurityGroup

  ec2Instance: 
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
      - DeviceName: /dev/xvda
        Ebs:
          DeleteOnTermination: true
          VolumeType: gp2
          VolumeSize: 10
      InstanceType: t2.micro
      ImageId: !FindInMap [AWSRegionToAMI, !Ref 'AWS::Region', AMIID]
      KeyName: !Ref keyPairName
      SecurityGroupIds: 
        - !Ref SecurityGroup
      SubnetId: !Ref publicSubnetId
      Tags:
        - Key: Name
          Value: dev-instance
        - Key: Env
          Value: Dev
      UserData:
        Fn::Base64: 
          !Sub |
              #cloud-boothook
              #!/bin/bash -ex
              amazon-linux-extras install docker
              yum update -y
              service docker start
              yum install git -y
              curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
              chmod +x /usr/local/bin/docker-compose
              docker-compose version

Outputs:
  Website:
    Description: The Public DNS for the EC2 Instance
    Value: !Sub 'http://${ec2Instance.PublicDnsName}'