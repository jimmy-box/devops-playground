AWSTemplateFormatVersion: "2010-09-09"
Description: Dev EC2 instance to test Nginx

Parameters:
  MyVpcId:
    Type: String
    Default:
    Description: Your VPC ID where you want to deploy the application

  publicSubnetId:
    Type: String
  
  keyPairName:
    Type: String
    Default: test-key-pair

Mappings:
  AWSRegionToAMI:
  # amzn-ami-2017.09.l-amazon-ecs-optimized
  # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html
    eu-west-2:
      AMIID: ami-0171207a7acd2a570

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 Security Group
      VpcId: !Ref MyVpcId

  SecurityGroupHTTPinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: '80'
      ToPort: '80'
      CidrIp: 0.0.0.0/0

  SecurityGroupSSHinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp: 0.0.0.0/0

  EcsSecurityGroupALBports:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: '31000'
      ToPort: '61000'
      SourceSecurityGroupId: !Ref SecurityGroup

  ec2Instance: 
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
      - DeviceName: /dev/sda1
        Ebs:
          DeleteOnTermination: true
          VolumeType: gp2
          VolumeSize: 10
          Encrypted: "true"
      InstanceType: t2.micro
      ImageId: !FindInMap [AWSRegionToAMI, !Ref 'AWS::Region', AMIID]
      KeyName: !Ref keyPairName
      SecurityGroupIds: !Ref securityGroupId
      SubnetId: !Ref publicSubnetId
      Tags:
        - Key: Name
          Value: dev-instance
        - Key: Env
          Value: Dev
      UserData:
        Fn::Base64: 
          #!Sub |
            #!/bin/bash -xe
            amazon-linux-extras install docker
            service docker start
            yum update -y
            yum install  -y git 
            curl sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
            docker-compose version

Outputs:
  Website:
    Description: The Public DNS for the EC2 Instance
    Value: !Sub 'http://${ec2Instance.PublicDnsName}'